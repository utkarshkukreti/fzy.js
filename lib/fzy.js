// Generated by CoffeeScript 1.6.1
(function() {
  var fzy, leadingCharacterBonus;

  fzy = {};

  if (typeof module !== "undefined" && module !== null) {
    module.exports = {
      fzy: fzy
    };
  }

  if (typeof window !== "undefined" && window !== null) {
    window.fzy = fzy;
  }

  fzy.sort = function(haystacks, needle) {
    return haystacks.map(function(haystack, index) {
      return {
        index: index,
        haystack: haystack,
        score: fzy.score(haystack, needle)
      };
    }).sort(function(left, right) {
      if (left.score === right.score) {
        return left.index - right.index;
      } else {
        return right.score - left.score;
      }
    }).map(function(object) {
      return object.haystack;
    });
  };

  leadingCharacterBonus = [5, 3, 1, 0.5, 0.5, 0.5];

  fzy.score = function(haystack, needle) {
    var i, j, lHaystack, lNeedle, lastIndex, score, _ref;
    if (haystack === needle) {
      return Infinity;
    }
    score = 0;
    lNeedle = needle.toLowerCase();
    lHaystack = haystack.toLowerCase();
    i = 0;
    lastIndex = 0;
    while (i < needle.length) {
      j = lHaystack.indexOf(lNeedle[i], lastIndex);
      if (j < 5) {
        score += leadingCharacterBonus[j];
      }
      if (j === -1) {
        return 0;
      }
      if (j === lastIndex + 1) {
        score++;
      }
      if (("A" <= (_ref = haystack[j]) && _ref <= "Z")) {
        score++;
      }
      if (j > 0 && /[-_\/\.]/.test(haystack[j - 1])) {
        score++;
      }
      lastIndex = j + 1;
      i++;
    }
    return score;
  };

}).call(this);
